{"version":3,"sources":["App/AppProvider.tsx","Settings/WelcomeMessage.tsx","Settings/ConfirmButton.tsx","Shared/Page.tsx","Shared/Styles.js","Shared/Tile.ts","Settings/CoinHeaderGrid.tsx","Shared/CoinImage.tsx","Settings/CoinTile.tsx","Settings/CoinGrid.tsx","Settings/SearchBar.tsx","Settings/Search.tsx","Settings/index.tsx","App/AppLayout.tsx","App/AppBar.tsx","Shared/Content.tsx","Dashboard/PriceTile.tsx","Dashboard/PriceGrid.tsx","Dashboard/CoinSpotlight.tsx","Dashboard/HighchartsConfig.js","Dashboard/ChartSelect.tsx","Dashboard/PriceChart.tsx","Dashboard/HighchartsTheme.js","Dashboard/index.tsx","App/index.tsx","serviceWorker.ts","index.tsx"],"names":["cc","require","appContext","React","createContext","page","favorites","prices","timeInterval","filteredCoins","currentFavorite","historical","confirmFavorites","firstVisit","setPage","addCoin","removeCoin","isInFavorites","setFilteredCoins","setCurrentFavorite","changeChartSelect","MAX_FAVORITES","TIME_UNITS","AppProvider","props","componentDidMount","fetchCoins","fetchPrices","fetchHistorical","key","state","length","push","setState","_","pull","a","coinList","Data","console","log","filter","price","Object","keys","results","name","data","map","ticker","index","moment","subtract","valueOf","USD","promises","units","priceHistorical","toDate","Promise","all","returnData","i","priceFull","priceData","warn","includes","localStorage","setItem","JSON","stringify","sym","parse","String","getItem","savedSettings","kryptoDashData","value","Provider","this","children","Component","WelcomeMessage","Consumer","Typography","variant","ConfirmButtonElem","styled","Button","CenterDiv","div","ConfirmButton","size","color","onClick","Page","backgroundColor2","Tile","Paper","SelectableTile","DeletableTile","DisabledTile","CoinHeaderGridStyled","CoinName","CoinSymbol","DeleteIcon","CoinHeaderGrid","topSection","symbol","CoinImageStyled","img","spotlight","css","CoinImage","coin","alt","src","ImageUrl","clickCoinHandler","coinKey","CoinTile","TileClass","Symbol","CoinGridStyled","getCoinsToDisplay","slice","getLowerSectionCoins","CoinGrid","useStyles","makeStyles","theme","createStyles","root","padding","display","alignItems","width","input","marginLeft","spacing","flex","iconButton","divider","height","margin","SearchBar","search","classes","className","IconButton","type","aria-label","InputBase","onChange","e","placeholder","inputProps","handleFilter","debounce","inputValue","coinSymbols","coinNames","allStringsToSearch","concat","fuzzyResults","fuzzy","result","string","pickBy","symKey","coinName","Search","target","filterCoins","Settings","defaultTheme","typography","fontFamily","join","createMuiTheme","flexDirection","minHeight","main","marginTop","marginBottom","htmlFontSize","Layout","useTheme","ThemeProvider","CssBaseline","Container","Bar","ControlButtonElem","active","show","ControlButton","lower","context","useContext","disabled","Hidden","xsDown","style","charAt","toUpperCase","substr","AppBar","ContentStyled","Content","JustifyRight","JustifyLeft","TickerPrice","ChangePct","red","numberFormat","number","PriceTileStyled","compact","ChangePercent","CHANGEPCT24HOUR","PriceTileGrid","PRICE","PriceTileCompact","PriceTile","PriceGridStyled","PriceGrid","SpotlightName","CoinSpotlight","title","text","yAxis","xAxis","legend","layout","align","verticalAlign","plotOptions","series","label","connectorAllowed","pointStart","responsive","rules","condition","maxWidth","chartOptions","select","ReactHighcharts","Highcharts","setOptions","colors","chart","backgroundColor","plotBackgroundColor","plotBorderColor","plotBorderWidth","font","subtitle","gridLineColor","gridLineWidth","labels","lineColor","tickColor","fontWeight","fontSize","minorTickInterval","tickWidth","tooltip","toolbar","itemStyle","line","dataLabels","marker","spline","scatter","candlestick","enabled","itemHoverStyle","itemHiddenStyle","credits","navigation","buttonOptions","symbolStroke","fill","linearGradient","x1","y1","x2","y2","stops","stroke","rangeSelector","buttonTheme","states","hover","inputStyle","labelStyle","navigator","handles","borderColor","outlineColor","maskFill","scrollbar","barBackgroundColor","barBorderColor","buttonArrowColor","buttonBackgroundColor","buttonBorderColor","rifleColor","trackBackgroundColor","trackBorderColor","PriceChart","ChartSelect","defaultValue","config","highchartsConfig","ChartGrid","Chart","Spotlight","App","AppLayout","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fed049e8.chunk.js","sourcesContent":["import React from 'react'\r\nimport _ from 'lodash'\r\nimport moment from 'moment'\r\n\r\nconst cc = require('cryptocompare')\r\n//cc.setApiKey('<put your api key here>')\r\n\r\nexport interface AppProviderProps {}\r\n\r\nexport interface AppProviderState {\r\n  page: string\r\n  favorites: string[]\r\n  currentFavorite: string\r\n  historical: any[]\r\n  prices: any[]\r\n  timeInterval: string\r\n  filteredCoins: string[]\r\n  coinList?: any\r\n  firstVisit?: boolean\r\n  confirmFavorites?(): void\r\n  setPage(page: string): void\r\n  addCoin(key: string): void\r\n  removeCoin(key: string): void\r\n  isInFavorites(key: string): boolean\r\n  setFilteredCoins(filteredCoins: string[]): void\r\n  setCurrentFavorite(sym: string): void\r\n  changeChartSelect(value: string): void\r\n}\r\n\r\nexport const appContext = React.createContext<AppProviderState>({\r\n  page: '',\r\n  favorites: [],\r\n  prices: [],\r\n  timeInterval: 'weeks',\r\n  filteredCoins: [],\r\n  currentFavorite: '',\r\n  historical: [],\r\n  confirmFavorites: () => {},\r\n  firstVisit: false,\r\n  setPage: () => {},\r\n  addCoin: () => {},\r\n  removeCoin: () => {},\r\n  isInFavorites: () => false,\r\n  setFilteredCoins: () => {},\r\n  setCurrentFavorite: () => {},\r\n  changeChartSelect: () => {}\r\n})\r\n\r\nconst MAX_FAVORITES = 12\r\nconst TIME_UNITS = 10\r\n\r\nexport class AppProvider extends React.Component<\r\n  AppProviderProps,\r\n  AppProviderState\r\n> {\r\n  constructor(props: AppProviderProps) {\r\n    super(props)\r\n    this.state = {\r\n      page: 'settings',\r\n      favorites: [\r\n        'BTC',\r\n        'ETH',\r\n        'XRP',\r\n        'USDT',\r\n        'BCH',\r\n        'LTC',\r\n        'BSV',\r\n        'EOS',\r\n        'BNB',\r\n        'XTZ',\r\n        'LEO',\r\n        'XLM'\r\n      ],\r\n      currentFavorite: 'BTC',\r\n      historical: [],\r\n      prices: [],\r\n      timeInterval: 'weeks',\r\n      filteredCoins: [],\r\n      ...this.savedSettings(),\r\n      confirmFavorites: this.confirmFavorites,\r\n      setPage: this.setPage,\r\n      addCoin: this.addCoin,\r\n      removeCoin: this.removeCoin,\r\n      isInFavorites: this.isInFavorites,\r\n      setFilteredCoins: this.setFilteredCoins,\r\n      setCurrentFavorite: this.setCurrentFavorite,\r\n      changeChartSelect: this.changeChartSelect\r\n    }\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.fetchCoins()\r\n    this.fetchPrices()\r\n    this.fetchHistorical()\r\n  }\r\n\r\n  addCoin = (key: string) => {\r\n    let favorites = [...this.state.favorites]\r\n    if (favorites.length < MAX_FAVORITES) {\r\n      favorites.push(key)\r\n      this.setState({ favorites })\r\n    }\r\n  }\r\n\r\n  removeCoin = (key: string) => {\r\n    let favorites = [...this.state.favorites]\r\n    this.setState({ favorites: _.pull(favorites, key) })\r\n  }\r\n\r\n  fetchCoins = async () => {\r\n    let coinList = (await cc.coinList()).Data\r\n    console.log('fetch', coinList)\r\n    this.setState({ coinList })\r\n  }\r\n\r\n  fetchPrices = async () => {\r\n    if (this.state.firstVisit) return\r\n\r\n    let prices = await this.prices()\r\n    // filter empty price objects\r\n    prices = prices.filter(price => Object.keys(price).length)\r\n    console.log('prices', prices)\r\n    this.setState({ prices })\r\n  }\r\n\r\n  fetchHistorical = async () => {\r\n    if (this.state.firstVisit) return\r\n    let results = await this.historical()\r\n    let historical = [\r\n      {\r\n        name: this.state.currentFavorite,\r\n        data: results.map((ticker, index) => [\r\n          moment()\r\n            .subtract({ [this.state.timeInterval]: TIME_UNITS - index })\r\n            .valueOf(),\r\n          ticker.USD\r\n        ])\r\n      }\r\n    ]\r\n    this.setState({ historical })\r\n  }\r\n\r\n  historical = async () => {\r\n    let promises = []\r\n    for (let units = TIME_UNITS; units > 0; units--) {\r\n      promises.push(\r\n        cc.priceHistorical(\r\n          this.state.currentFavorite,\r\n          ['USD'],\r\n          moment()\r\n            .subtract({ [this.state.timeInterval]: units })\r\n            .toDate()\r\n        )\r\n      )\r\n    }\r\n    return Promise.all(promises)\r\n  }\r\n\r\n  prices = async () => {\r\n    let returnData = []\r\n    for (let i = 0; i < this.state.favorites.length; i++) {\r\n      try {\r\n        let priceData = await cc.priceFull(this.state.favorites[i], 'USD')\r\n        returnData.push(priceData)\r\n      } catch (e) {\r\n        console.warn('Fetch price error: ', e)\r\n      }\r\n    }\r\n    return returnData\r\n  }\r\n\r\n  isInFavorites = (key: string): boolean =>\r\n    _.includes(this.state.favorites, key)\r\n\r\n  confirmFavorites = () => {\r\n    let currentFavorite = this.state.favorites[0] || ''\r\n    this.setState(\r\n      {\r\n        firstVisit: false,\r\n        page: 'dashboard',\r\n        currentFavorite,\r\n        prices: [],\r\n        historical: []\r\n      },\r\n      () => {\r\n        this.fetchPrices()\r\n        this.fetchHistorical()\r\n      }\r\n    )\r\n    localStorage.setItem(\r\n      'kryptoDash',\r\n      JSON.stringify({ favorites: this.state.favorites, currentFavorite })\r\n    )\r\n  }\r\n\r\n  setCurrentFavorite = (sym: string) => {\r\n    this.setState(\r\n      { currentFavorite: sym, historical: [] },\r\n      this.fetchHistorical\r\n    )\r\n    localStorage.setItem(\r\n      'kryptoDash',\r\n      JSON.stringify({\r\n        ...JSON.parse(String(localStorage.getItem('kryptoDash'))),\r\n        currentFavorite: sym\r\n      })\r\n    )\r\n  }\r\n\r\n  savedSettings = () => {\r\n    const kryptoDashData = JSON.parse(\r\n      String(localStorage.getItem('kryptoDash'))\r\n    )\r\n\r\n    if (!kryptoDashData) {\r\n      return { page: 'settings', firstVisit: true }\r\n    }\r\n    let { favorites, currentFavorite } = kryptoDashData\r\n    return { favorites, currentFavorite }\r\n  }\r\n\r\n  setPage = (page: string) => {\r\n    this.setState({ page })\r\n  }\r\n\r\n  setFilteredCoins = (filteredCoins: string[]) =>\r\n    this.setState({ filteredCoins: filteredCoins })\r\n\r\n  changeChartSelect = (value: string) => {\r\n    this.setState({ timeInterval: value, historical: [] }, this.fetchHistorical)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <appContext.Provider value={this.state}>\r\n        {this.props.children}\r\n      </appContext.Provider>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { appContext } from '../App/AppProvider'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nexport interface WelcomeMessageProps {}\r\n\r\nconst WelcomeMessage: React.SFC<WelcomeMessageProps> = () => {\r\n  return (\r\n    <appContext.Consumer>\r\n      {({ firstVisit }) =>\r\n        firstVisit ? (\r\n          <Typography variant='h6'>\r\n            Welcome to Kryptodash, please select your favorite coins!\r\n          </Typography>\r\n        ) : null\r\n      }\r\n    </appContext.Consumer>\r\n  )\r\n}\r\n\r\nexport default WelcomeMessage\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { appContext } from '../App/AppProvider'\r\nimport { fontSize1, greenBoxShadow, color3 } from '../Shared/Styles'\r\nimport Button from '@material-ui/core/Button'\r\n\r\ninterface ConfirmButtonElemProps {}\r\nconst ConfirmButtonElem = styled(({ ...props }) => <Button {...props} />)<\r\n  ConfirmButtonElemProps\r\n>`\r\n  && {\r\n    margin: 40px 20px;\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nexport const CenterDiv = styled.div`\r\n  display: grid;\r\n  justify-content: center;\r\n`\r\n\r\nexport interface ConfirmButtonProps {}\r\n\r\nconst ConfirmButton: React.SFC<ConfirmButtonProps> = () => {\r\n  return (\r\n    <appContext.Consumer>\r\n      {({ confirmFavorites }) => (\r\n        <CenterDiv>\r\n          <ConfirmButtonElem\r\n            variant='outlined'\r\n            size='large'\r\n            color='secondary'\r\n            onClick={confirmFavorites}>\r\n            Confirm Favorites\r\n          </ConfirmButtonElem>\r\n        </CenterDiv>\r\n      )}\r\n    </appContext.Consumer>\r\n  )\r\n}\r\n\r\nexport default ConfirmButton\r\n","import React from 'react'\r\nimport { appContext } from '../App/AppProvider'\r\n\r\nexport interface PageProps {\r\n  name: string\r\n  children: any\r\n}\r\n\r\nconst Page: React.SFC<PageProps> = props => {\r\n  return (\r\n    <appContext.Consumer>\r\n      {({ page }) => {\r\n        if (page !== props.name) {\r\n          return null\r\n        }\r\n        return <div>{props.children}</div>\r\n      }}\r\n    </appContext.Consumer>\r\n  )\r\n}\r\n\r\nexport default Page\r\n","export const color = '#061a44'\r\nexport const color2 = '#fff'\r\nexport const color3 = '#42ff3a'\r\n\r\nexport const lightBlueBackground = `background-color: ${color}`\r\nexport const backgroundColor2 = `background-color: ${color2};`\r\nexport const greenBackgroundColor = `background-color: ${color3};`\r\n\r\nexport const fontColorGreen = `color: #4CAF50`\r\nexport const fontColorWhite = `color: white`\r\nexport const subtleBoxShadow = `box-shadow: 0px 0px 2px 1px #121d5b`\r\n\r\nexport const greenBoxShadow = `box-shadow: 0 0 3px 2px #4CAF50`\r\nexport const redBoxShadow = `box-shadow: 0 0 3px 2px #F44336`\r\n\r\nexport const fontSizeBig = 'font-size: 1.2em'\r\nexport const fontSize1 = 'font-size: 1.0em;'\r\nexport const fontSize2 = 'font-size: 0.9em'\r\nexport const fontSize3 = 'font-size: 0.75em'\r\n\r\nexport const textAlignCenter = 'text-align: center;'\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Paper from '@material-ui/core/Paper'\r\n\r\nimport {\r\n  subtleBoxShadow,\r\n  lightBlueBackground,\r\n  greenBoxShadow,\r\n  redBoxShadow\r\n} from './Styles'\r\n\r\ninterface TileProps {}\r\nexport const Tile = styled(Paper)<TileProps>`\r\n  && {\r\n    border-radius: 5px;\r\n    padding: 10px;\r\n  }\r\n`\r\n\r\ninterface SelectableTileProps {}\r\nexport const SelectableTile = styled(Tile)<SelectableTileProps>`\r\n  &:hover {\r\n    cursor: pointer;\r\n    ${greenBoxShadow}\r\n  }\r\n`\r\n\r\ninterface DeletableTileProps {}\r\nexport const DeletableTile = styled(SelectableTile)<DeletableTileProps>`\r\n  &:hover {\r\n    cursor: pointer;\r\n    ${redBoxShadow}\r\n  }\r\n`\r\n\r\ninterface DisabledTileProps {}\r\nexport const DisabledTile = styled(Tile)<DisabledTileProps>`\r\n  pointer-events: none;\r\n  opacity: 0.4;\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { DeletableTile } from '../Shared/Tile'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nexport const CoinHeaderGridStyled = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  margin-bottom: 10px;\r\n`\r\n\r\nexport const CoinName = styled.div`\r\n  margin-right: 10px;\r\n`\r\n\r\nexport const CoinSymbol = styled.div`\r\n  justify-self: right;\r\n`\r\nexport const DeleteIcon = styled.div`\r\n  justify-self: right;\r\n  display: none;\r\n  ${DeletableTile}: hover & {\r\n    display: block;\r\n    color: red;\r\n  }\r\n`\r\n\r\nexport interface CoinHeaderGridProps {\r\n  name: string\r\n  symbol: string\r\n  topSection: boolean\r\n}\r\n\r\nconst CoinHeaderGrid: React.SFC<CoinHeaderGridProps> = props => {\r\n  return (\r\n    <CoinHeaderGridStyled>\r\n      <CoinName>{props.name}</CoinName>\r\n      {props.topSection ? (\r\n        <DeleteIcon>\r\n          <CloseIcon />\r\n        </DeleteIcon>\r\n      ) : (\r\n        <CoinSymbol>{props.symbol}</CoinSymbol>\r\n      )}\r\n    </CoinHeaderGridStyled>\r\n  )\r\n}\r\n\r\nexport default CoinHeaderGrid\r\n","import React from 'react'\r\nimport styled, { css } from 'styled-components'\r\n\r\ninterface CoinImageStyledProps {\r\n  spotlight?: boolean\r\n}\r\n\r\nconst CoinImageStyled = styled.img<CoinImageStyledProps>`\r\n  height: 50px;\r\n  ${props =>\r\n    props.spotlight &&\r\n    css`\r\n      height: 200px;\r\n      margin: auto;\r\n      display: block;\r\n    `}\r\n`\r\n\r\nexport interface CoinImageProps {\r\n  coin: any\r\n  spotlight?: any\r\n}\r\n\r\nconst CoinImage: React.SFC<CoinImageProps> = ({ coin, spotlight }) => {\r\n  return (\r\n    <CoinImageStyled\r\n      spotlight={spotlight}\r\n      alt={coin.CoinSymbol}\r\n      src={`http://cryptocompare.com/${coin.ImageUrl}`}\r\n    />\r\n  )\r\n}\r\n\r\nexport default CoinImage\r\n","import React from 'react'\r\nimport { appContext } from '../App/AppProvider'\r\nimport { SelectableTile, DisabledTile, DeletableTile } from '../Shared/Tile'\r\nimport CoinHeaderGrid from './CoinHeaderGrid'\r\nimport CoinImage from '../Shared/CoinImage'\r\n\r\nimport Paper from '@material-ui/core/Paper'\r\n\r\nexport interface CoinTileProps {\r\n  coinKey: string\r\n  topSection: boolean\r\n}\r\n\r\nfunction clickCoinHandler(\r\n  topSection: boolean,\r\n  coinKey: string,\r\n  addCoin: (key: string) => void,\r\n  removeCoin: (key: string) => void\r\n) {\r\n  return topSection\r\n    ? () => {\r\n        removeCoin(coinKey)\r\n      }\r\n    : () => {\r\n        addCoin(coinKey)\r\n      }\r\n}\r\nconst CoinTile: React.SFC<CoinTileProps> = props => {\r\n  return (\r\n    <appContext.Consumer>\r\n      {({ coinList, addCoin, removeCoin, isInFavorites }) => {\r\n        let coin = coinList[props.coinKey]\r\n\r\n        let TileClass = SelectableTile\r\n        if (props.topSection) {\r\n          TileClass = DeletableTile\r\n        } else if (isInFavorites(props.coinKey)) {\r\n          TileClass = DisabledTile\r\n        }\r\n        return (\r\n          <TileClass\r\n            onClick={clickCoinHandler(\r\n              props.topSection,\r\n              props.coinKey,\r\n              addCoin,\r\n              removeCoin\r\n            )}>\r\n            <CoinHeaderGrid\r\n              topSection={props.topSection}\r\n              name={coin.CoinName}\r\n              symbol={coin.Symbol}\r\n            />\r\n            <CoinImage coin={coin} />\r\n          </TileClass>\r\n        )\r\n      }}\r\n    </appContext.Consumer>\r\n  )\r\n}\r\n\r\nexport default CoinTile\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport CoinTile from './CoinTile'\r\nimport { appContext } from '../App/AppProvider'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nexport const CoinGridStyled = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));\r\n  grid-gap: 15px;\r\n  margin-top: 40px;\r\n`\r\n\r\nexport interface CoinGridProps {\r\n  topSection?: boolean\r\n}\r\n\r\nfunction getLowerSectionCoins(coinList: any, filteredCoins: string[]) {\r\n  if (Object.keys(filteredCoins).length > 0) return Object.keys(filteredCoins)\r\n  return Object.keys(coinList).slice(0, 100)\r\n}\r\n\r\nfunction getCoinsToDisplay(\r\n  coinList: any,\r\n  topSection: boolean,\r\n  favorites: string[],\r\n  filteredCoins: string[]\r\n): string[] {\r\n  return topSection ? favorites : getLowerSectionCoins(coinList, filteredCoins)\r\n}\r\n\r\nconst CoinGrid: React.SFC<CoinGridProps> = props => {\r\n  return (\r\n    <appContext.Consumer>\r\n      {({ coinList, favorites, filteredCoins }) => (\r\n        <CoinGridStyled>\r\n          {getCoinsToDisplay(\r\n            coinList,\r\n            !!props.topSection,\r\n            favorites,\r\n            filteredCoins\r\n          ).map(coinKey => (\r\n            <CoinTile\r\n              key={coinKey}\r\n              topSection={!!props.topSection}\r\n              coinKey={coinKey}\r\n            />\r\n          ))}\r\n        </CoinGridStyled>\r\n      )}\r\n    </appContext.Consumer>\r\n  )\r\n}\r\n\r\nexport default CoinGrid\r\n","import React from 'react'\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport InputBase from '@material-ui/core/InputBase'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      padding: '4px 6px',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      width: 400\r\n    },\r\n    input: {\r\n      marginLeft: theme.spacing(1),\r\n      flex: 1\r\n    },\r\n    iconButton: {\r\n      padding: 10\r\n    },\r\n    divider: {\r\n      height: 28,\r\n      margin: 4\r\n    }\r\n  })\r\n)\r\n\r\nexport interface SearchBarProps {\r\n  search: (e: any) => void\r\n}\r\n\r\nconst SearchBar: React.SFC<SearchBarProps> = ({ search }) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <IconButton\r\n        type='submit'\r\n        className={classes.iconButton}\r\n        aria-label='search'>\r\n        <SearchIcon />\r\n      </IconButton>\r\n      <InputBase\r\n        onChange={e => search(e)}\r\n        className={classes.input}\r\n        placeholder='Search Coins'\r\n        inputProps={{ 'aria-label': 'Search Coins' }}\r\n      />\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default SearchBar\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { appContext } from '../App/AppProvider'\r\nimport { backgroundColor2, fontSize1 } from '../Shared/Styles'\r\nimport _ from 'lodash'\r\nimport fuzzy from 'fuzzy'\r\n\r\nimport SearchBar from './SearchBar'\r\n\r\nexport interface SearchProps {}\r\n\r\nconst CenterDiv = styled.div`\r\n  margin: 40px;\r\n  display: grid;\r\n  justify-content: center;\r\n`\r\n\r\nconst SearchInput = styled.input`\r\n  ${backgroundColor2}\r\n  ${fontSize1}\r\n  padding: 4px;\r\n  border-radius: 5px;\r\n  border: 1px solid;\r\n  height: 25px;\r\n  color: #1163c9;\r\n  place-self: center center;\r\n`\r\nconst handleFilter = _.debounce((inputValue, coinList, setFilteredCoins) => {\r\n  // Get all coins symbols\r\n  let coinSymbols = Object.keys(coinList)\r\n  // Get all coin names, map symbol to name\r\n  let coinNames = coinSymbols.map(sym => coinList[sym].CoinName)\r\n  let allStringsToSearch = coinSymbols.concat(coinNames)\r\n  let fuzzyResults = fuzzy\r\n    .filter(inputValue, allStringsToSearch, {})\r\n    .map(result => result.string)\r\n\r\n  let filteredCoins = _.pickBy(coinList, (result, symKey) => {\r\n    let coinName = result.coinName\r\n    return (\r\n      _.includes(fuzzyResults, symKey) || _.includes(fuzzyResults, coinName)\r\n    )\r\n  })\r\n\r\n  setFilteredCoins(filteredCoins)\r\n}, 500)\r\n\r\nfunction filterCoins(\r\n  e: any,\r\n  setFilteredCoins: (filteredCoins: string[]) => void,\r\n  coinList: any\r\n) {\r\n  let inputValue = e.target.value\r\n  if (!inputValue) {\r\n    setFilteredCoins([])\r\n    return\r\n  }\r\n  handleFilter(inputValue, coinList, setFilteredCoins)\r\n}\r\n\r\nconst Search: React.SFC<SearchProps> = () => {\r\n  return (\r\n    <appContext.Consumer>\r\n      {({ setFilteredCoins, coinList }) => (\r\n        <CenterDiv>\r\n          <SearchBar search={e => filterCoins(e, setFilteredCoins, coinList)} />\r\n        </CenterDiv>\r\n      )}\r\n    </appContext.Consumer>\r\n  )\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\nimport WelcomeMessage from './WelcomeMessage'\r\nimport ConfirmButton from './ConfirmButton'\r\nimport Page from '../Shared/Page'\r\nimport CoinGrid from '../Settings/CoinGrid'\r\nimport Search from './Search'\r\n\r\nexport interface SettingsProps {}\r\n\r\nconst Settings: React.SFC<SettingsProps> = () => {\r\n  return (\r\n    <Page name='settings'>\r\n      <WelcomeMessage />\r\n      <CoinGrid topSection />\r\n      <ConfirmButton />\r\n      <Search />\r\n      <CoinGrid />\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Settings\r\n","import React from 'react'\r\n\r\nimport { ThemeProvider } from '@material-ui/core/styles'\r\nimport { createMuiTheme } from '@material-ui/core'\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport Container from '@material-ui/core/Container'\r\nimport {\r\n  useTheme,\r\n  createStyles,\r\n  makeStyles,\r\n  Theme\r\n} from '@material-ui/core/styles'\r\n\r\nconst defaultTheme = {\r\n  typography: {\r\n    fontFamily: ['Share Tech Mono', 'monospace'].join(',')\r\n  }\r\n}\r\nconst theme = createMuiTheme(defaultTheme)\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      minHeight: '100vh'\r\n    },\r\n    main: {\r\n      marginTop: theme.spacing(8),\r\n      marginBottom: theme.spacing(2)\r\n    },\r\n    typography: {\r\n      fontFamily: 'Share Tech Mono',\r\n      htmlFontSize: 12\r\n    }\r\n  })\r\n)\r\n\r\nexport interface LayoutProps {\r\n  children: any\r\n}\r\n\r\nconst Layout: React.SFC<LayoutProps> = ({ children }) => {\r\n  const classes = useStyles(useTheme())\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <Container className={classes.main}>{children}</Container>\r\n      </div>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import React, { useContext } from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { appContext, AppProviderProps } from './AppProvider'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\nimport SettingsIcon from '@material-ui/icons/Settings'\r\nimport DashboardIcon from '@material-ui/icons/Dashboard'\r\nimport Hidden from '@material-ui/core/Hidden'\r\n\r\nconst Bar = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 190px auto;\r\n  justify-items: right;\r\n`\r\n\r\ninterface ControlButtonElemProps {\r\n  active?: boolean\r\n  show?: boolean\r\n}\r\n\r\nconst ControlButtonElem = styled(({ ...props }) => <Button {...props} />)<\r\n  ControlButtonElemProps\r\n>`\r\n  && {\r\n    cursor: pointer;\r\n    margin-left: 20px;\r\n    ${props => props.active && css``}\r\n    ${props => props.show && css``};\r\n  }\r\n`\r\n\r\nconst toProperCase = (lower: string): string => {\r\n  return lower.charAt(0).toUpperCase() + lower.substr(1)\r\n}\r\n\r\ninterface ControlButtonProps {\r\n  name: string\r\n  active?: boolean\r\n}\r\n\r\nconst ControlButton: React.SFC<ControlButtonProps> = props => {\r\n  const context = useContext(appContext)\r\n\r\n  const variant = context.page === props.name ? 'contained' : 'outlined'\r\n  const disabled = context.firstVisit && props.name === 'dashboard'\r\n  return (\r\n    <>\r\n      <ControlButtonElem\r\n        disabled={disabled}\r\n        onClick={() => context.setPage(props.name)}\r\n        variant={variant}\r\n        color='primary'\r\n        size='large'>\r\n        {props.name === 'settings' ? <SettingsIcon /> : <DashboardIcon />}\r\n        <Hidden xsDown>\r\n          <div style={{ marginLeft: '5px' }}>\r\n            <Typography>{toProperCase(props.name)}</Typography>\r\n          </div>\r\n        </Hidden>\r\n      </ControlButtonElem>\r\n    </>\r\n  )\r\n}\r\n\r\nexport interface AppBarProps {}\r\n\r\nconst AppBar: React.SFC<AppBarProps> = () => {\r\n  return (\r\n    <Bar>\r\n      <div>\r\n        <Typography variant='h4'> KRYPTODASH</Typography>\r\n      </div>\r\n      <div>\r\n        <ControlButton name='dashboard' />\r\n        <ControlButton name='settings' />\r\n      </div>\r\n    </Bar>\r\n  )\r\n}\r\n\r\nexport default AppBar\r\n","import React from 'react'\r\nimport { appContext } from '../App/AppProvider'\r\nimport styled from 'styled-components'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nexport const ContentStyled = styled.div`\r\n  margin-top: 40px;\r\n`\r\n\r\nexport interface PageProps {\r\n  children: any\r\n}\r\n\r\nconst Content: React.SFC<PageProps> = props => {\r\n  return (\r\n    <appContext.Consumer>\r\n      {({ coinList, prices, firstVisit }) => {\r\n        if (!coinList) {\r\n          return (\r\n            <ContentStyled>\r\n              <Typography variant='h6'> Loading Coins </Typography>\r\n            </ContentStyled>\r\n          )\r\n        }\r\n        if (!prices) {\r\n          return (\r\n            <ContentStyled>\r\n              <Typography variant='h6'> Loading Prices </Typography>{' '}\r\n            </ContentStyled>\r\n          )\r\n        }\r\n        return <ContentStyled>{props.children}</ContentStyled>\r\n      }}\r\n    </appContext.Consumer>\r\n  )\r\n}\r\n\r\nexport default Content\r\n","import React from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { SelectableTile } from '../Shared/Tile'\r\nimport { fontSize3, fontSizeBig, greenBoxShadow } from '../Shared/Styles'\r\nimport { CoinHeaderGridStyled } from '../Settings/CoinHeaderGrid'\r\nimport { appContext } from '../App/AppProvider'\r\n\r\nconst JustifyRight = styled.div`\r\n  justify-self: right;\r\n`\r\n\r\nconst JustifyLeft = styled.div`\r\n  justify-self: left;\r\n`\r\n\r\nconst TickerPrice = styled.div`\r\n  ${fontSizeBig}\r\n`\r\n\r\nexport interface ChangePctProps {\r\n  red: boolean\r\n}\r\n\r\nconst ChangePct = styled.div<ChangePctProps>`\r\n  color: green;\r\n  ${props =>\r\n    props.red &&\r\n    css`\r\n      color: red;\r\n    `}\r\n`\r\n\r\nconst numberFormat = (number: string) => {\r\n  return +(number + '').slice(0, 7)\r\n}\r\n\r\nexport interface PriceTileStyledProps {\r\n  compact?: boolean\r\n  currentFavorite?: boolean\r\n}\r\n\r\nconst PriceTileStyled = styled(SelectableTile)<PriceTileStyledProps>`\r\n  ${props =>\r\n    props.compact &&\r\n    css`\r\n      display: grid;\r\n      ${fontSize3}\r\n      grid-gap: 5px;\r\n      grid-template-columns: repeat(3, 1fr);\r\n      justify-items: right;\r\n    `}\r\n\r\n  ${props =>\r\n    props.currentFavorite &&\r\n    css`\r\n      ${greenBoxShadow}\r\n      pointer-events: none;\r\n    `}\r\n`\r\n\r\nexport interface ChangePercentProps {\r\n  data: any\r\n}\r\n\r\nconst ChangePercent: React.SFC<ChangePercentProps> = ({ data }) => {\r\n  return (\r\n    <JustifyRight>\r\n      <ChangePct red={data.CHANGEPCT24HOUR < 0}>\r\n        {numberFormat(data.CHANGEPCT24HOUR)}%\r\n      </ChangePct>\r\n    </JustifyRight>\r\n  )\r\n}\r\n\r\ninterface PriceTileGridProps {\r\n  sym: any\r\n  data: any\r\n  currentFavorite: boolean\r\n  setCurrentFavorite: (event: any) => void\r\n}\r\n\r\nconst PriceTileGrid: React.SFC<PriceTileGridProps> = ({\r\n  sym,\r\n  data,\r\n  currentFavorite,\r\n  setCurrentFavorite\r\n}) => {\r\n  return (\r\n    <PriceTileStyled\r\n      currentFavorite={currentFavorite}\r\n      onClick={setCurrentFavorite}>\r\n      <CoinHeaderGridStyled>\r\n        <JustifyLeft>{sym}</JustifyLeft>\r\n        <ChangePercent data={data} />\r\n        <TickerPrice>${numberFormat(data.PRICE)}</TickerPrice>\r\n      </CoinHeaderGridStyled>\r\n    </PriceTileStyled>\r\n  )\r\n}\r\n\r\nexport interface PriceTileCompactProps {\r\n  sym: any\r\n  data: any\r\n  currentFavorite: boolean\r\n  setCurrentFavorite: (event: any) => void\r\n}\r\n\r\nconst PriceTileCompact: React.SFC<PriceTileCompactProps> = ({\r\n  sym,\r\n  data,\r\n  currentFavorite,\r\n  setCurrentFavorite\r\n}) => {\r\n  return (\r\n    <PriceTileStyled\r\n      compact\r\n      currentFavorite={currentFavorite}\r\n      onClick={setCurrentFavorite}>\r\n      <JustifyLeft>{sym}</JustifyLeft>\r\n      <ChangePercent data={data} />\r\n      <div>${numberFormat(data.PRICE)}</div>\r\n    </PriceTileStyled>\r\n  )\r\n}\r\n\r\nexport interface PriceTileProps {\r\n  price: any\r\n  index: number\r\n}\r\n\r\nconst PriceTile: React.SFC<PriceTileProps> = ({ price, index }) => {\r\n  let sym = Object.keys(price)[0]\r\n  let data = price[sym]['USD']\r\n  let TileClass = index < 5 ? PriceTileGrid : PriceTileCompact\r\n  return (\r\n    <appContext.Consumer>\r\n      {({ currentFavorite, setCurrentFavorite }) => (\r\n        <TileClass\r\n          sym={sym}\r\n          data={data}\r\n          currentFavorite={currentFavorite === sym}\r\n          setCurrentFavorite={e => setCurrentFavorite(sym)}\r\n        />\r\n      )}\r\n    </appContext.Consumer>\r\n  )\r\n}\r\n\r\nexport default PriceTile\r\n","import React from 'react'\r\nimport { appContext } from '../App/AppProvider'\r\nimport styled from 'styled-components'\r\nimport PriceTile from './PriceTile'\r\n\r\nconst PriceGridStyled = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  grid-gap: 15px;\r\n  margin-top: 40px;\r\n`\r\nexport interface PriceGridProps {}\r\n\r\nconst PriceGrid: React.SFC<PriceGridProps> = () => {\r\n  return (\r\n    <appContext.Consumer>\r\n      {({ prices }) => (\r\n        <PriceGridStyled>\r\n          {prices.map((price, index) => (\r\n            <PriceTile key={index} price={price} index={index} />\r\n          ))}\r\n        </PriceGridStyled>\r\n      )}\r\n    </appContext.Consumer>\r\n  )\r\n}\r\n\r\nexport default PriceGrid\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Tile } from '../Shared/Tile'\r\nimport { appContext } from '../App/AppProvider'\r\nimport { fontSizeBig } from '../Shared/Styles'\r\nimport CoinImage from '../Shared/CoinImage'\r\n\r\nconst SpotlightName = styled.div`\r\n  text-align: center;\r\n  ${fontSizeBig};\r\n  margin-bottom: 20px;\r\n  margin-top: 20px;\r\n`\r\n\r\nexport interface CoinSpotlightProps {}\r\n\r\nconst CoinSpotlight: React.SFC<CoinSpotlightProps> = () => {\r\n  return (\r\n    <appContext.Consumer>\r\n      {({ currentFavorite, coinList }) => (\r\n        <Tile>\r\n          <SpotlightName>{coinList[currentFavorite].CoinName}</SpotlightName>\r\n          <CoinImage spotlight coin={coinList[currentFavorite]} />\r\n        </Tile>\r\n      )}\r\n    </appContext.Consumer>\r\n  )\r\n}\r\n\r\nexport default CoinSpotlight\r\n","export default function(historical) {\r\n  return {\r\n    title: {\r\n      text: ''\r\n    },\r\n\r\n    yAxis: {\r\n      title: {\r\n        text: 'Price'\r\n      }\r\n    },\r\n\r\n    xAxis: {\r\n      type: 'datetime'\r\n    },\r\n\r\n    legend: {\r\n      layout: 'vertical',\r\n      align: 'right',\r\n      verticalAlign: 'middle'\r\n    },\r\n\r\n    plotOptions: {\r\n      series: {\r\n        label: {\r\n          connectorAllowed: false\r\n        },\r\n        pointStart: 2010\r\n      }\r\n    },\r\n\r\n    series: historical,\r\n\r\n    responsive: {\r\n      rules: [\r\n        {\r\n          condition: {\r\n            maxWidth: 500\r\n          },\r\n          chartOptions: {\r\n            legend: {\r\n              layout: 'horizontal',\r\n              align: 'center',\r\n              verticalAlign: 'bottom'\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n","import styled from 'styled-components'\r\nimport { backgroundColor2, fontSize2 } from '../Shared/Styles'\r\n\r\nexport default styled.select`\r\n  ${backgroundColor2}\r\n  ${fontSize2}\r\n  color: #1163c9;\r\n  border: 1px solid;\r\n  border-radius: 5px;\r\n  padding: 5px;\r\n  float: right;\r\n`\r\n","import React from 'react'\r\nimport highchartsConfig from './HighchartsConfig'\r\nimport highchartsTheme from './HighchartsTheme'\r\n\r\nimport { Tile } from '../Shared/Tile'\r\nimport { appContext } from '../App/AppProvider'\r\nimport ReactHighcharts from 'react-highcharts'\r\nimport ChartSelect from './ChartSelect'\r\n\r\nReactHighcharts.Highcharts.setOptions(highchartsTheme)\r\n\r\nexport interface PriceChartProps {}\r\n\r\nconst PriceChart: React.SFC<PriceChartProps> = () => {\r\n  return (\r\n    <appContext.Consumer>\r\n      {({ historical, changeChartSelect }) => (\r\n        <Tile>\r\n          <ChartSelect\r\n            defaultValue={'weeks'}\r\n            onChange={e => {\r\n              changeChartSelect(e.target.value)\r\n            }}>\r\n            <option value='days'>Days</option>\r\n            <option value='weeks'>Weeks</option>\r\n            <option value='months'>Months</option>\r\n          </ChartSelect>\r\n          {historical.length ? (\r\n            <ReactHighcharts\r\n              config={highchartsConfig(historical)}></ReactHighcharts>\r\n          ) : (\r\n            <div> Loading Historical Data ...</div>\r\n          )}\r\n        </Tile>\r\n      )}\r\n    </appContext.Consumer>\r\n  )\r\n}\r\n\r\nexport default PriceChart\r\n","export default {\r\n  colors: ['#FFA000'],\r\n  chart: {\r\n    backgroundColor: '#ffffff',\r\n    className: 'dark-container',\r\n    plotBackgroundColor: '#ffffff',\r\n    plotBorderColor: '#CCCCCC',\r\n    plotBorderWidth: 0\r\n  },\r\n  title: {\r\n    style: {\r\n      color: '#C0C0C0',\r\n      font: 'bold 16px \"Trebuchet MS\", Verdana, sans-serif'\r\n    }\r\n  },\r\n  subtitle: {\r\n    style: {\r\n      color: '#666666',\r\n      font: 'bold 12px \"Trebuchet MS\", Verdana, sans-serif'\r\n    }\r\n  },\r\n  xAxis: {\r\n    gridLineColor: '#333333',\r\n    gridLineWidth: 0,\r\n    labels: {\r\n      style: {\r\n        color: '#A0A0A0'\r\n      }\r\n    },\r\n    lineColor: '#A0A0A0',\r\n    tickColor: '#A0A0A0',\r\n    title: {\r\n      style: {\r\n        color: '#CCC',\r\n        fontWeight: 'bold',\r\n        fontSize: '12px',\r\n        fontFamily: 'Trebuchet MS, Verdana, sans-serif'\r\n      }\r\n    }\r\n  },\r\n  yAxis: {\r\n    gridLineColor: '#333333',\r\n    labels: {\r\n      style: {\r\n        color: '#A0A0A0'\r\n      }\r\n    },\r\n    lineColor: '#A0A0A0',\r\n    minorTickInterval: null,\r\n    tickColor: '#A0A0A0',\r\n    tickWidth: 1,\r\n    title: {\r\n      style: {\r\n        color: '#CCC',\r\n        fontWeight: 'bold',\r\n        fontSize: '12px',\r\n        fontFamily: 'Trebuchet MS, Verdana, sans-serif'\r\n      }\r\n    }\r\n  },\r\n  tooltip: {\r\n    backgroundColor: 'rgba(0, 0, 0, 0.75)',\r\n    style: {\r\n      color: '#F0F0F0'\r\n    }\r\n  },\r\n  toolbar: {\r\n    itemStyle: {\r\n      color: 'silver'\r\n    }\r\n  },\r\n  plotOptions: {\r\n    line: {\r\n      dataLabels: {\r\n        color: '#CCC'\r\n      },\r\n      marker: {\r\n        lineColor: '#333'\r\n      }\r\n    },\r\n    spline: {\r\n      marker: {\r\n        lineColor: '#333'\r\n      }\r\n    },\r\n    scatter: {\r\n      marker: {\r\n        lineColor: '#333'\r\n      }\r\n    },\r\n    candlestick: {\r\n      lineColor: 'white'\r\n    }\r\n  },\r\n  legend: {\r\n    enabled: false,\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n\r\n    itemStyle: {\r\n      font: '9pt Trebuchet MS, Verdana, sans-serif',\r\n      color: '#A0A0A0'\r\n    },\r\n    itemHoverStyle: {\r\n      color: '#FFF'\r\n    },\r\n    itemHiddenStyle: {\r\n      color: '#444'\r\n    },\r\n    title: {\r\n      style: {\r\n        color: '#C0C0C0'\r\n      }\r\n    }\r\n  },\r\n  credits: {\r\n    enabled: false\r\n  },\r\n  labels: {\r\n    style: {\r\n      color: '#CCC'\r\n    }\r\n  },\r\n  navigation: {\r\n    buttonOptions: {\r\n      symbolStroke: '#DDDDDD',\r\n      theme: {\r\n        fill: {\r\n          linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\r\n          stops: [\r\n            [0.4, '#606060'],\r\n            [0.6, '#333333']\r\n          ]\r\n        },\r\n        stroke: '#000000'\r\n      }\r\n    }\r\n  },\r\n  // scroll charts\r\n  rangeSelector: {\r\n    buttonTheme: {\r\n      fill: {\r\n        linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\r\n        stops: [\r\n          [0.4, '#888'],\r\n          [0.6, '#555']\r\n        ]\r\n      },\r\n      stroke: '#000000',\r\n      style: {\r\n        color: '#CCC',\r\n        fontWeight: 'bold'\r\n      },\r\n      states: {\r\n        hover: {\r\n          fill: {\r\n            linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\r\n            stops: [\r\n              [0.4, '#BBB'],\r\n              [0.6, '#888']\r\n            ]\r\n          },\r\n          stroke: '#000000',\r\n          style: {\r\n            color: 'white'\r\n          }\r\n        },\r\n        select: {\r\n          fill: {\r\n            linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\r\n            stops: [\r\n              [0.1, '#000'],\r\n              [0.3, '#333']\r\n            ]\r\n          },\r\n          stroke: '#000000',\r\n          style: {\r\n            color: 'yellow'\r\n          }\r\n        }\r\n      }\r\n    },\r\n    inputStyle: {\r\n      backgroundColor: '#333',\r\n      color: 'silver'\r\n    },\r\n    labelStyle: {\r\n      color: 'silver'\r\n    }\r\n  },\r\n  navigator: {\r\n    handles: {\r\n      backgroundColor: '#666',\r\n      borderColor: '#AAA'\r\n    },\r\n    outlineColor: '#CCC',\r\n    maskFill: 'rgba(16, 16, 16, 0.5)',\r\n    series: {\r\n      color: '#7798BF',\r\n      lineColor: '#A6C7ED'\r\n    }\r\n  },\r\n  scrollbar: {\r\n    barBackgroundColor: {\r\n      linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\r\n      stops: [\r\n        [0.4, '#888'],\r\n        [0.6, '#555']\r\n      ]\r\n    },\r\n    barBorderColor: '#CCC',\r\n    buttonArrowColor: '#CCC',\r\n    buttonBackgroundColor: {\r\n      linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\r\n      stops: [\r\n        [0.4, '#888'],\r\n        [0.6, '#555']\r\n      ]\r\n    },\r\n    buttonBorderColor: '#CCC',\r\n    rifleColor: '#FFF',\r\n    trackBackgroundColor: {\r\n      linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\r\n      stops: [\r\n        [0, '#000'],\r\n        [1, '#333']\r\n      ]\r\n    },\r\n    trackBorderColor: '#666'\r\n  }\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Page from '../Shared/Page'\r\nimport PriceGrid from './PriceGrid'\r\nimport CoinSpotlight from './CoinSpotlight'\r\nimport PriceCharts from './PriceChart'\r\nimport { appContext } from '../App/AppProvider'\r\n\r\nconst ChartGrid = styled.div`\r\n  display: grid;\r\n  margin-top: 20px;\r\n  grid-gap: 15px;\r\n  grid-template-columns: 1fr 3fr;\r\n`\r\n\r\ninterface ChartProps {}\r\n\r\nconst Chart: React.SFC<ChartProps> = () => {\r\n  return (\r\n    <appContext.Consumer>\r\n      {({ prices }) => (prices.length > 0 ? <PriceCharts /> : null)}\r\n    </appContext.Consumer>\r\n  )\r\n}\r\n\r\nexport interface SpotlightProps {}\r\n\r\nconst Spotlight: React.SFC<SpotlightProps> = () => {\r\n  return (\r\n    <appContext.Consumer>\r\n      {({ prices }) => (prices.length > 0 ? <CoinSpotlight /> : null)}\r\n    </appContext.Consumer>\r\n  )\r\n}\r\n\r\nexport interface SettingsProps {}\r\n\r\nconst Settings: React.SFC<SettingsProps> = () => {\r\n  return (\r\n    <Page name='dashboard'>\r\n      <PriceGrid />\r\n      <ChartGrid>\r\n        <Spotlight />\r\n        <Chart />\r\n      </ChartGrid>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Settings\r\n","import React from 'react'\r\nimport Settings from '../Settings'\r\nimport AppLayout from './AppLayout'\r\nimport AppBar from './AppBar'\r\nimport { AppProvider } from './AppProvider'\r\nimport Content from '../Shared/Content'\r\nimport Dashboard from '../Dashboard'\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <AppLayout>\r\n      <AppProvider>\r\n        <AppBar />\r\n        <Content>\r\n          <Settings />\r\n          <Dashboard />\r\n        </Content>\r\n      </AppProvider>\r\n    </AppLayout>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}