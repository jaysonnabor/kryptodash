{"version":3,"sources":["App/AppProvider.tsx","Settings/WelcomeMessage.tsx","Shared/Styles.js","Settings/ConfirmButton.tsx","Shared/Page.tsx","Shared/Tile.js","Settings/CoinHeaderGrid.tsx","Shared/CoinImage.tsx","Settings/CoinTile.tsx","Settings/CoinGrid.tsx","Settings/Search.tsx","Settings/index.tsx","App/AppLayout.tsx","App/AppBar.tsx","Shared/Content.tsx","Dashboard/PriceTile.tsx","Dashboard/PriceGrid.tsx","Dashboard/CoinSpotlight.tsx","Dashboard/PriceChart.tsx","Dashboard/HighchartsTheme.js","Dashboard/HighchartsConfig.js","Dashboard/index.tsx","App/index.tsx","serviceWorker.ts","index.tsx"],"names":["cc","require","appContext","React","createContext","page","favorites","prices","filteredCoins","currentFavorite","confirmFavorites","firstVisit","setPage","addCoin","removeCoin","isInFavorites","setFilteredCoins","setCurrentFavorite","MAX_FAVORITES","AppProvider","props","componentDidMount","fetchCoins","fetchPrices","key","state","length","push","setState","_","pull","a","coinList","Data","console","log","filter","price","Object","keys","returnData","i","priceFull","priceData","warn","includes","localStorage","setItem","JSON","stringify","sym","parse","String","getItem","savedSettings","kryptoDashData","Provider","value","this","children","Component","WelcomeMessage","Consumer","lightBlueBackground","backgroundColor2","greenBoxShadow","ConfirmButtonStyled","styled","div","CenterDiv","ConfirmButton","onClick","Page","name","Tile","SelectableTile","DeletableTile","DisabledTile","CoinHeaderGridStyled","CoinName","CoinSymbol","DeleteIcon","CoinHeaderGrid","topSection","symbol","CoinImageStyled","img","spotlight","css","CoinImage","coin","alt","src","ImageUrl","clickCoinHandler","coinKey","CoinTile","TileClass","Symbol","CoinGridStyled","getCoinsToDisplay","slice","getLowerSectionCoins","CoinGrid","map","SearchGrid","SearchInput","input","handleFilter","debounce","inputValue","coinSymbols","coinNames","allStringsToSearch","concat","fuzzyResults","fuzzy","result","string","pickBy","symKey","coinName","Search","onKeyUp","e","target","filterCoins","Settings","Bar","Brand","ControlButtonElem","active","ControlButton","lower","charAt","toUpperCase","substr","AppBar","ContentStyled","Content","JustifyRight","JustifyLeft","TickerPrice","ChangePct","red","numberFormat","number","PriceTileStyled","compact","ChangePercent","data","CHANGEPCT24HOUR","PriceTileGrid","PRICE","PriceTileCompact","PriceTile","index","event","PriceGridStyled","PriceGrid","SpotlightName","CoinSpotlight","ReactHighcharts","Highcharts","setOptions","colors","chart","backgroundColor","className","plotBackgroundColor","plotBorderColor","plotBorderWidth","title","style","color","font","subtitle","xAxis","gridLineColor","gridLineWidth","labels","lineColor","tickColor","fontWeight","fontSize","fontFamily","yAxis","minorTickInterval","tickWidth","tooltip","toolbar","itemStyle","plotOptions","line","dataLabels","marker","spline","scatter","candlestick","legend","itemHoverStyle","itemHiddenStyle","credits","enabled","navigation","buttonOptions","symbolStroke","theme","fill","linearGradient","x1","y1","x2","y2","stops","stroke","rangeSelector","buttonTheme","states","hover","select","inputStyle","labelStyle","navigator","handles","borderColor","outlineColor","maskFill","series","scrollbar","barBackgroundColor","barBorderColor","buttonArrowColor","buttonBackgroundColor","buttonBorderColor","rifleColor","trackBackgroundColor","trackBorderColor","PriceChart","config","text","layout","align","verticalAlign","label","connectorAllowed","pointStart","responsive","rules","condition","maxWidth","chartOptions","ChartGrid","App","AppLayout","Dashboard","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2a564cd4.chunk.js","sourcesContent":["import React from 'react'\r\nimport _ from 'lodash'\r\n\r\nconst cc = require('cryptocompare')\r\n\r\nexport interface AppProviderProps {}\r\n\r\nexport interface AppProviderState {\r\n  page: string\r\n  favorites: string[]\r\n  currentFavorite: string\r\n  prices: any[]\r\n  filteredCoins: string[]\r\n  coinList?: any\r\n  firstVisit?: boolean\r\n  confirmFavorites?(): void\r\n  setPage(page: string): void\r\n  addCoin(key: string): void\r\n  removeCoin(key: string): void\r\n  isInFavorites(key: string): boolean\r\n  setFilteredCoins(filteredCoins: string[]): void\r\n  setCurrentFavorite(sym: string): void\r\n}\r\n\r\nexport const appContext = React.createContext<AppProviderState>({\r\n  page: '',\r\n  favorites: [],\r\n  prices: [],\r\n  filteredCoins: [],\r\n  currentFavorite: '',\r\n  confirmFavorites: () => {},\r\n  firstVisit: false,\r\n  setPage: () => {},\r\n  addCoin: () => {},\r\n  removeCoin: () => {},\r\n  isInFavorites: () => false,\r\n  setFilteredCoins: () => {},\r\n  setCurrentFavorite: () => {}\r\n})\r\n\r\nconst MAX_FAVORITES = 10\r\n\r\nexport class AppProvider extends React.Component<\r\n  AppProviderProps,\r\n  AppProviderState\r\n> {\r\n  constructor(props: AppProviderProps) {\r\n    super(props)\r\n    this.state = {\r\n      page: 'dashboard',\r\n      favorites: [\r\n        'BTC',\r\n        'LTC',\r\n        'ETH',\r\n        'ZEC',\r\n        'DASH',\r\n        'XRP',\r\n        'XMR',\r\n        'BCH',\r\n        'NEO',\r\n        'EOS'\r\n      ],\r\n      currentFavorite: 'BTC',\r\n      prices: [],\r\n      filteredCoins: [],\r\n      ...this.savedSettings(),\r\n      confirmFavorites: this.confirmFavorites,\r\n      setPage: this.setPage,\r\n      addCoin: this.addCoin,\r\n      removeCoin: this.removeCoin,\r\n      isInFavorites: this.isInFavorites,\r\n      setFilteredCoins: this.setFilteredCoins,\r\n      setCurrentFavorite: this.setCurrentFavorite\r\n    }\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.fetchCoins()\r\n    this.fetchPrices()\r\n  }\r\n\r\n  addCoin = (key: string) => {\r\n    let favorites = [...this.state.favorites]\r\n    if (favorites.length < MAX_FAVORITES) {\r\n      favorites.push(key)\r\n      this.setState({ favorites })\r\n    }\r\n  }\r\n\r\n  removeCoin = (key: string) => {\r\n    let favorites = [...this.state.favorites]\r\n    this.setState({ favorites: _.pull(favorites, key) })\r\n  }\r\n\r\n  fetchCoins = async () => {\r\n    let coinList = (await cc.coinList()).Data\r\n    console.log('fetch', coinList)\r\n    this.setState({ coinList })\r\n  }\r\n\r\n  fetchPrices = async () => {\r\n    if (this.state.firstVisit) return\r\n\r\n    let prices = await this.prices()\r\n    // filter empty price objects\r\n    prices = prices.filter(price => Object.keys(price).length)\r\n    console.log('prices', prices)\r\n    this.setState({ prices })\r\n  }\r\n\r\n  prices = async () => {\r\n    let returnData = []\r\n    for (let i = 0; i < this.state.favorites.length; i++) {\r\n      try {\r\n        let priceData = await cc.priceFull(this.state.favorites[i], 'USD')\r\n        returnData.push(priceData)\r\n      } catch (e) {\r\n        console.warn('Fetch price error: ', e)\r\n      }\r\n    }\r\n    return returnData\r\n  }\r\n\r\n  isInFavorites = (key: string): boolean =>\r\n    _.includes(this.state.favorites, key)\r\n\r\n  confirmFavorites = () => {\r\n    let currentFavorite = this.state.favorites[0] || ''\r\n    this.setState(\r\n      { firstVisit: false, page: 'dashboard', currentFavorite },\r\n      () => {\r\n        this.fetchPrices()\r\n      }\r\n    )\r\n    localStorage.setItem(\r\n      'kryptoDash',\r\n      JSON.stringify({ favorites: this.state.favorites, currentFavorite })\r\n    )\r\n  }\r\n\r\n  setCurrentFavorite = (sym: string) => {\r\n    this.setState({ currentFavorite: sym })\r\n    localStorage.setItem(\r\n      'kryptoDash',\r\n      JSON.stringify({\r\n        ...JSON.parse(String(localStorage.getItem('kryptoDash'))),\r\n        currentFavorite: sym\r\n      })\r\n    )\r\n  }\r\n\r\n  savedSettings = () => {\r\n    const kryptoDashData = JSON.parse(\r\n      String(localStorage.getItem('kryptoDash'))\r\n    )\r\n\r\n    if (!kryptoDashData) {\r\n      return { page: 'settings', firstVisit: true }\r\n    }\r\n    let { favorites, currentFavorite } = kryptoDashData\r\n    return { favorites, currentFavorite }\r\n  }\r\n\r\n  setPage = (page: string) => {\r\n    this.setState({ page })\r\n  }\r\n\r\n  setFilteredCoins = (filteredCoins: string[]) =>\r\n    this.setState({ filteredCoins: filteredCoins })\r\n\r\n  render() {\r\n    return (\r\n      <appContext.Provider value={this.state}>\r\n        {this.props.children}\r\n      </appContext.Provider>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { appContext } from '../App/AppProvider'\r\n\r\nexport interface WelcomeMessageProps {}\r\n\r\nconst WelcomeMessage: React.SFC<WelcomeMessageProps> = () => {\r\n  return (\r\n    <appContext.Consumer>\r\n      {({ firstVisit }) =>\r\n        firstVisit ? (\r\n          <div>\r\n            Welcome to Kryptodash, please select your favorite coin to begin.\r\n          </div>\r\n        ) : null\r\n      }\r\n    </appContext.Consumer>\r\n  )\r\n}\r\n\r\nexport default WelcomeMessage\r\n","export const color = '#061a44'\r\nexport const color2 = '#010e2c'\r\nexport const color3 = '#42ff3a'\r\n\r\nexport const lightBlueBackground = `background-color: ${color}`\r\nexport const backgroundColor2 = `background-color: ${color2};`\r\nexport const greenBackgroundColor = `background-color: ${color3};`\r\n\r\nexport const fontColorGreen = `color: #03A9F4`\r\nexport const fontColorWhite = `color: white`\r\nexport const subtleBoxShadow = `box-shadow: 0px 0px 5px 1px #121d5b`\r\n\r\nexport const greenBoxShadow = `box-shadow: 0px 0px 4px 2px #5fff17`\r\nexport const redBoxShadow = `box-shadow: 0px 0px 2px 2px #e41111`\r\n\r\nexport const fontSizeLogo = 'font-size: 1.4em'\r\nexport const fontSizeBig = 'font-size: 1.2em'\r\nexport const fontSize1 = 'font-size: 1.0em;'\r\nexport const fontSize2 = 'font-size: 0.9em'\r\nexport const fontSize3 = 'font-size: 0.75em'\r\n\r\nexport const textAlignCenter = 'text-align: center;'\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { appContext } from '../App/AppProvider'\r\nimport { fontSize1, greenBoxShadow, color3 } from '../Shared/Styles'\r\n\r\nconst ConfirmButtonStyled = styled.div`\r\n  margin: 20px;\r\n  color: ${color3};\r\n  border-radius: 5px;\r\n  ${fontSize1}\r\n  padding: 6px 12px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    ${greenBoxShadow}\r\n  }\r\n`\r\nexport const CenterDiv = styled.div`\r\n  display: grid;\r\n  justify-content: center;\r\n`\r\n\r\nexport interface ConfirmButtonProps {}\r\n\r\nconst ConfirmButton: React.SFC<ConfirmButtonProps> = () => {\r\n  return (\r\n    <appContext.Consumer>\r\n      {({ confirmFavorites }) => (\r\n        <CenterDiv>\r\n          <ConfirmButtonStyled onClick={confirmFavorites}>\r\n            Confirm Favorites\r\n          </ConfirmButtonStyled>\r\n        </CenterDiv>\r\n      )}\r\n    </appContext.Consumer>\r\n  )\r\n}\r\n\r\nexport default ConfirmButton\r\n","import React from 'react'\r\nimport { appContext } from '../App/AppProvider'\r\n\r\nexport interface PageProps {\r\n  name: string\r\n  children: any\r\n}\r\n\r\nconst Page: React.SFC<PageProps> = props => {\r\n  return (\r\n    <appContext.Consumer>\r\n      {({ page }) => {\r\n        if (page !== props.name) {\r\n          return null\r\n        }\r\n        return <div>{props.children}</div>\r\n      }}\r\n    </appContext.Consumer>\r\n  )\r\n}\r\n\r\nexport default Page\r\n","import styled from 'styled-components'\r\nimport {\r\n  subtleBoxShadow,\r\n  lightBlueBackground,\r\n  greenBoxShadow,\r\n  redBoxShadow\r\n} from '../Shared/Styles'\r\n\r\nexport const Tile = styled.div`\r\n  ${subtleBoxShadow}\r\n  ${lightBlueBackground}\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n`\r\n\r\nexport const SelectableTile = styled(Tile)`\r\n  &:hover {\r\n    cursor: pointer;\r\n    ${greenBoxShadow}\r\n  }\r\n`\r\nexport const DeletableTile = styled(SelectableTile)`\r\n  &:hover {\r\n    cursor: pointer;\r\n    ${redBoxShadow}\r\n  }\r\n`\r\nexport const DisabledTile = styled(Tile)`\r\n  pointer-events: none;\r\n  opacity: 0.4;\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { DeletableTile } from '../Shared/Tile'\r\n\r\nexport const CoinHeaderGridStyled = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  margin-bottom: 10px;\r\n`\r\n\r\nexport const CoinName = styled.div`\r\n  margin-right: 10px;\r\n`\r\n\r\nexport const CoinSymbol = styled.div`\r\n  justify-self: right;\r\n`\r\nexport const DeleteIcon = styled.div`\r\n  justify-self: right;\r\n  display: none;\r\n  ${DeletableTile}: hover & {\r\n    display: block;\r\n    color: red;\r\n  }\r\n`\r\n\r\nexport interface CoinHeaderGridProps {\r\n  name: string\r\n  symbol: string\r\n  topSection: boolean\r\n}\r\n\r\nconst CoinHeaderGrid: React.SFC<CoinHeaderGridProps> = props => {\r\n  return (\r\n    <CoinHeaderGridStyled>\r\n      <CoinName>{props.name}</CoinName>\r\n      {props.topSection ? (\r\n        <DeleteIcon> X </DeleteIcon>\r\n      ) : (\r\n        <CoinSymbol>{props.symbol}</CoinSymbol>\r\n      )}\r\n    </CoinHeaderGridStyled>\r\n  )\r\n}\r\n\r\nexport default CoinHeaderGrid\r\n","import React from 'react'\r\nimport styled, { css } from 'styled-components'\r\n\r\ninterface CoinImageStyledProps {\r\n  spotlight?: boolean\r\n}\r\n\r\nconst CoinImageStyled = styled.img<CoinImageStyledProps>`\r\n  height: 50px;\r\n  ${props =>\r\n    props.spotlight &&\r\n    css`\r\n      height: 200px;\r\n      margin: auto;\r\n      display: block;\r\n    `}\r\n`\r\n\r\nexport interface CoinImageProps {\r\n  coin: any\r\n  spotlight?: any\r\n}\r\n\r\nconst CoinImage: React.SFC<CoinImageProps> = ({ coin, spotlight }) => {\r\n  return (\r\n    <CoinImageStyled\r\n      spotlight={spotlight}\r\n      alt={coin.CoinSymbol}\r\n      src={`http://cryptocompare.com/${coin.ImageUrl}`}\r\n    />\r\n  )\r\n}\r\n\r\nexport default CoinImage\r\n","import React from 'react'\r\nimport { appContext } from '../App/AppProvider'\r\nimport { SelectableTile, DisabledTile, DeletableTile } from '../Shared/Tile'\r\nimport CoinHeaderGrid from './CoinHeaderGrid'\r\nimport CoinImage from '../Shared/CoinImage'\r\n\r\nexport interface CoinTileProps {\r\n  coinKey: string\r\n  topSection: boolean\r\n}\r\n\r\nfunction clickCoinHandler(\r\n  topSection: boolean,\r\n  coinKey: string,\r\n  addCoin: (key: string) => void,\r\n  removeCoin: (key: string) => void\r\n) {\r\n  return topSection\r\n    ? () => {\r\n        removeCoin(coinKey)\r\n      }\r\n    : () => {\r\n        addCoin(coinKey)\r\n      }\r\n}\r\nconst CoinTile: React.SFC<CoinTileProps> = props => {\r\n  return (\r\n    <appContext.Consumer>\r\n      {({ coinList, addCoin, removeCoin, isInFavorites }) => {\r\n        let coin = coinList[props.coinKey]\r\n\r\n        let TileClass = SelectableTile\r\n        if (props.topSection) {\r\n          TileClass = DeletableTile\r\n        } else if (isInFavorites(props.coinKey)) {\r\n          TileClass = DisabledTile\r\n        }\r\n        return (\r\n          <TileClass\r\n            onClick={clickCoinHandler(\r\n              props.topSection,\r\n              props.coinKey,\r\n              addCoin,\r\n              removeCoin\r\n            )}>\r\n            <CoinHeaderGrid\r\n              topSection={props.topSection}\r\n              name={coin.CoinName}\r\n              symbol={coin.Symbol}\r\n            />\r\n            <CoinImage coin={coin} />\r\n          </TileClass>\r\n        )\r\n      }}\r\n    </appContext.Consumer>\r\n  )\r\n}\r\n\r\nexport default CoinTile\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport CoinTile from './CoinTile'\r\nimport { appContext } from '../App/AppProvider'\r\n\r\nexport const CoinGridStyled = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));\r\n  grid-gap: 15px;\r\n  margin-top: 60px;\r\n`\r\n\r\nexport interface CoinGridProps {\r\n  topSection?: boolean\r\n}\r\n\r\nfunction getLowerSectionCoins(coinList: any, filteredCoins: string[]) {\r\n  if (Object.keys(filteredCoins).length > 0) return Object.keys(filteredCoins)\r\n  return Object.keys(coinList).slice(0, 100)\r\n}\r\n\r\nfunction getCoinsToDisplay(\r\n  coinList: any,\r\n  topSection: boolean,\r\n  favorites: string[],\r\n  filteredCoins: string[]\r\n): string[] {\r\n  return topSection ? favorites : getLowerSectionCoins(coinList, filteredCoins)\r\n}\r\n\r\nconst CoinGrid: React.SFC<CoinGridProps> = props => {\r\n  return (\r\n    <appContext.Consumer>\r\n      {({ coinList, favorites, filteredCoins }) => (\r\n        <CoinGridStyled>\r\n          {getCoinsToDisplay(\r\n            coinList,\r\n            !!props.topSection,\r\n            favorites,\r\n            filteredCoins\r\n          ).map(coinKey => (\r\n            <CoinTile\r\n              key={coinKey}\r\n              topSection={!!props.topSection}\r\n              coinKey={coinKey}\r\n            />\r\n          ))}\r\n        </CoinGridStyled>\r\n      )}\r\n    </appContext.Consumer>\r\n  )\r\n}\r\n\r\nexport default CoinGrid\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { appContext } from '../App/AppProvider'\r\nimport { backgroundColor2, fontSize1 } from '../Shared/Styles'\r\nimport _ from 'lodash'\r\nimport fuzzy from 'fuzzy'\r\n\r\nexport interface SearchProps {}\r\n\r\nconst SearchGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 200px 1fr;\r\n`\r\nconst SearchInput = styled.input`\r\n  ${backgroundColor2}\r\n  ${fontSize1}\r\n  padding: 4px;\r\n  border-radius: 5px;\r\n  border: 1px solid;\r\n  height: 25px;\r\n  color: #1163c9;\r\n  place-self: center left;\r\n`\r\nconst handleFilter = _.debounce((inputValue, coinList, setFilteredCoins) => {\r\n  // Get all coins symbols\r\n  let coinSymbols = Object.keys(coinList)\r\n  // Get all coin names, map symbol to name\r\n  let coinNames = coinSymbols.map(sym => coinList[sym].CoinName)\r\n  let allStringsToSearch = coinSymbols.concat(coinNames)\r\n  let fuzzyResults = fuzzy\r\n    .filter(inputValue, allStringsToSearch, {})\r\n    .map(result => result.string)\r\n\r\n  let filteredCoins = _.pickBy(coinList, (result, symKey) => {\r\n    let coinName = result.coinName\r\n    return (\r\n      _.includes(fuzzyResults, symKey) || _.includes(fuzzyResults, coinName)\r\n    )\r\n  })\r\n\r\n  setFilteredCoins(filteredCoins)\r\n}, 500)\r\n\r\nfunction filterCoins(\r\n  e: any,\r\n  setFilteredCoins: (filteredCoins: string[]) => void,\r\n  coinList: any\r\n) {\r\n  let inputValue = e.target.value\r\n  if (!inputValue) {\r\n    setFilteredCoins([])\r\n    return\r\n  }\r\n  handleFilter(inputValue, coinList, setFilteredCoins)\r\n}\r\n\r\nconst Search: React.SFC<SearchProps> = () => {\r\n  return (\r\n    <appContext.Consumer>\r\n      {({ setFilteredCoins, coinList }) => (\r\n        <SearchGrid>\r\n          <p> Search All Coins </p>\r\n          <SearchInput\r\n            onKeyUp={e => filterCoins(e, setFilteredCoins, coinList)}\r\n          />\r\n        </SearchGrid>\r\n      )}\r\n    </appContext.Consumer>\r\n  )\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\nimport WelcomeMessage from './WelcomeMessage'\r\nimport ConfirmButton from './ConfirmButton'\r\nimport Page from '../Shared/Page'\r\nimport CoinGrid from '../Settings/CoinGrid'\r\nimport Search from './Search'\r\n\r\nexport interface SettingsProps {}\r\n\r\nconst Settings: React.SFC<SettingsProps> = () => {\r\n  return (\r\n    <Page name='settings'>\r\n      <WelcomeMessage />\r\n      <CoinGrid topSection />\r\n      <ConfirmButton />\r\n      <Search />\r\n      <CoinGrid />\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Settings\r\n","import styled from 'styled-components'\r\n\r\nexport default styled.div<any>`\r\n  padding: 40px;\r\n`\r\n","import React from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { appContext } from './AppProvider'\r\nimport { fontSizeLogo } from '../Shared/Styles'\r\n\r\nconst Bar = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 200px auto 160px 160px;\r\n`\r\n\r\nconst Brand = styled.div`\r\n  ${fontSizeLogo}\r\n`\r\ninterface ControlButtonElemProps {\r\n  active?: boolean\r\n}\r\n\r\nconst ControlButtonElem = styled.div<ControlButtonElemProps>`\r\n  cursor: pointer;\r\n  ${props =>\r\n    props.active &&\r\n    css`\r\n      text-shadow: 0 0 60px #03ff03;\r\n    `}\r\n`\r\n\r\nconst toProperCase = (lower: string): string => {\r\n  return lower.charAt(0).toUpperCase() + lower.substr(1)\r\n}\r\n\r\ninterface ControlButtonProps {\r\n  name: string\r\n  active?: boolean\r\n}\r\n\r\nconst ControlButton: React.SFC<ControlButtonProps> = props => {\r\n  return (\r\n    <appContext.Consumer>\r\n      {({ page, setPage }) => (\r\n        <ControlButtonElem\r\n          active={page === props.name}\r\n          onClick={() => setPage(props.name)}>\r\n          {toProperCase(props.name)}\r\n        </ControlButtonElem>\r\n      )}\r\n    </appContext.Consumer>\r\n  )\r\n}\r\n\r\nexport interface AppBarProps {}\r\n\r\nconst AppBar: React.SFC<AppBarProps> = () => {\r\n  return (\r\n    <Bar>\r\n      <Brand> KRYPTODASH </Brand>\r\n      <div></div>\r\n      <ControlButton active name='dashboard' />\r\n      <ControlButton name='settings' />\r\n    </Bar>\r\n  )\r\n}\r\n\r\nexport default AppBar\r\n","import React from 'react'\r\nimport { appContext } from '../App/AppProvider'\r\nimport styled from 'styled-components'\r\n\r\nexport const ContentStyled = styled.div`\r\n  margin-top: 40px;\r\n`\r\n\r\nexport interface PageProps {\r\n  children: any\r\n}\r\n\r\nconst Content: React.SFC<PageProps> = props => {\r\n  return (\r\n    <appContext.Consumer>\r\n      {({ coinList, prices, firstVisit }) => {\r\n        if (!coinList) {\r\n          return <ContentStyled> Loading Coins </ContentStyled>\r\n        }\r\n        if (!firstVisit && !prices) {\r\n          return <ContentStyled> Loading Prices </ContentStyled>\r\n        }\r\n        return <ContentStyled>{props.children}</ContentStyled>\r\n      }}\r\n    </appContext.Consumer>\r\n  )\r\n}\r\n\r\nexport default Content\r\n","import React from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { SelectableTile } from '../Shared/Tile'\r\nimport { fontSize3, fontSizeBig, greenBoxShadow } from '../Shared/Styles'\r\nimport { CoinHeaderGridStyled } from '../Settings/CoinHeaderGrid'\r\nimport { AppProvider, appContext } from '../App/AppProvider'\r\n\r\nconst JustifyRight = styled.div`\r\n  justify-self: right;\r\n`\r\n\r\nconst JustifyLeft = styled.div`\r\n  justify-self: left;\r\n`\r\n\r\nconst TickerPrice = styled.div`\r\n  ${fontSizeBig}\r\n`\r\n\r\nexport interface ChangePctProps {\r\n  red: boolean\r\n}\r\n\r\nconst ChangePct = styled.div<ChangePctProps>`\r\n  color: green;\r\n  ${props =>\r\n    props.red &&\r\n    css`\r\n      color: red;\r\n    `}\r\n`\r\n\r\nconst numberFormat = (number: string) => {\r\n  return +(number + '').slice(0, 7)\r\n}\r\n\r\nexport interface PriceTileStyledProps {\r\n  compact?: boolean\r\n  currentFavorite?: boolean\r\n}\r\n\r\nconst PriceTileStyled = styled(SelectableTile)<PriceTileStyledProps>`\r\n  ${props =>\r\n    props.compact &&\r\n    css`\r\n      display: grid;\r\n      ${fontSize3}\r\n      grid-gap: 5px;\r\n      grid-template-columns: repeat(3, 1fr);\r\n      justify-items: right;\r\n    `}\r\n\r\n  ${props =>\r\n    props.currentFavorite &&\r\n    css`\r\n      ${greenBoxShadow}\r\n      pointer-events: none;\r\n    `}\r\n`\r\n\r\nexport interface ChangePercentProps {\r\n  data: any\r\n}\r\n\r\nconst ChangePercent: React.SFC<ChangePercentProps> = ({ data }) => {\r\n  return (\r\n    <JustifyRight>\r\n      <ChangePct red={data.CHANGEPCT24HOUR < 0}>\r\n        {numberFormat(data.CHANGEPCT24HOUR)}%\r\n      </ChangePct>\r\n    </JustifyRight>\r\n  )\r\n}\r\n\r\ninterface PriceTileGridProps {\r\n  sym: any\r\n  data: any\r\n  currentFavorite: boolean\r\n  setCurrentFavorite: (event: any) => void\r\n}\r\n\r\nconst PriceTileGrid: React.SFC<PriceTileGridProps> = ({\r\n  sym,\r\n  data,\r\n  currentFavorite,\r\n  setCurrentFavorite\r\n}) => {\r\n  return (\r\n    <PriceTileStyled\r\n      currentFavorite={currentFavorite}\r\n      onClick={setCurrentFavorite}>\r\n      <CoinHeaderGridStyled>\r\n        <JustifyLeft>{sym}</JustifyLeft>\r\n        <ChangePercent data={data} />\r\n        <TickerPrice>${numberFormat(data.PRICE)}</TickerPrice>\r\n      </CoinHeaderGridStyled>\r\n    </PriceTileStyled>\r\n  )\r\n}\r\n\r\nexport interface PriceTileCompactProps {\r\n  sym: any\r\n  data: any\r\n  currentFavorite: boolean\r\n  setCurrentFavorite: (event: any) => void\r\n}\r\n\r\nconst PriceTileCompact: React.SFC<PriceTileCompactProps> = ({\r\n  sym,\r\n  data,\r\n  currentFavorite,\r\n  setCurrentFavorite\r\n}) => {\r\n  return (\r\n    <PriceTileStyled\r\n      compact\r\n      currentFavorite={currentFavorite}\r\n      onClick={setCurrentFavorite}>\r\n      <JustifyLeft>{sym}</JustifyLeft>\r\n      <ChangePercent data={data} />\r\n      <div>${numberFormat(data.PRICE)}</div>\r\n    </PriceTileStyled>\r\n  )\r\n}\r\n\r\nexport interface PriceTileProps {\r\n  price: any\r\n  index: number\r\n}\r\n\r\nconst PriceTile: React.SFC<PriceTileProps> = ({ price, index }) => {\r\n  let sym = Object.keys(price)[0]\r\n  let data = price[sym]['USD']\r\n  let TileClass = index < 5 ? PriceTileGrid : PriceTileCompact\r\n  return (\r\n    <appContext.Consumer>\r\n      {({ currentFavorite, setCurrentFavorite }) => (\r\n        <TileClass\r\n          sym={sym}\r\n          data={data}\r\n          currentFavorite={currentFavorite === sym}\r\n          setCurrentFavorite={(event: any) => setCurrentFavorite(sym)}\r\n        />\r\n      )}\r\n    </appContext.Consumer>\r\n  )\r\n}\r\n\r\nexport default PriceTile\r\n","import React from 'react'\r\nimport { appContext } from '../App/AppProvider'\r\nimport styled from 'styled-components'\r\nimport PriceTile from './PriceTile'\r\n\r\nconst PriceGridStyled = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  grid-gap: 15px;\r\n  margin-top: 40px;\r\n`\r\nexport interface PriceGridProps {}\r\n\r\nconst PriceGrid: React.SFC<PriceGridProps> = () => {\r\n  return (\r\n    <appContext.Consumer>\r\n      {({ prices }) => (\r\n        <PriceGridStyled>\r\n          {prices.map((price, index) => (\r\n            <PriceTile key={index} price={price} index={index} />\r\n          ))}\r\n        </PriceGridStyled>\r\n      )}\r\n    </appContext.Consumer>\r\n  )\r\n}\r\n\r\nexport default PriceGrid\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Tile } from '../Shared/Tile'\r\nimport { appContext } from '../App/AppProvider'\r\nimport { fontSizeBig } from '../Shared/Styles'\r\nimport CoinImage from '../Shared/CoinImage'\r\n\r\nconst SpotlightName = styled.div`\r\n  text-align: center;\r\n  ${fontSizeBig};\r\n  margin-bottom: 20px;\r\n  margin-top: 20px;\r\n`\r\n\r\nexport interface CoinSpotlightProps {}\r\n\r\nconst CoinSpotlight: React.SFC<CoinSpotlightProps> = () => {\r\n  return (\r\n    <appContext.Consumer>\r\n      {({ currentFavorite, coinList }) => (\r\n        <Tile>\r\n          <SpotlightName>{coinList[currentFavorite].CoinName}</SpotlightName>\r\n          <CoinImage spotlight coin={coinList[currentFavorite]} />\r\n        </Tile>\r\n      )}\r\n    </appContext.Consumer>\r\n  )\r\n}\r\n\r\nexport default CoinSpotlight\r\n","import React from 'react'\r\nimport highchartsConfig from './HighchartsConfig'\r\nimport highchartsTheme from './HighchartsTheme'\r\n\r\nimport { Tile } from '../Shared/Tile'\r\nimport { appContext } from '../App/AppProvider'\r\nimport ReactHighcharts from 'react-highcharts'\r\n\r\nReactHighcharts.Highcharts.setOptions(highchartsTheme)\r\n\r\nexport interface PriceChartProps {}\r\n\r\nconst PriceChart: React.SFC<PriceChartProps> = () => {\r\n  return (\r\n    <appContext.Consumer>\r\n      {({}) => (\r\n        <Tile>\r\n          <ReactHighcharts config={highchartsConfig()}></ReactHighcharts>\r\n        </Tile>\r\n      )}\r\n    </appContext.Consumer>\r\n  )\r\n}\r\n\r\nexport default PriceChart\r\n","export default {\r\n  colors: [\r\n    '#61d936',\r\n    '#552ccb',\r\n    '#1163c9',\r\n    '#04a1ee',\r\n    '#08c6e0',\r\n    '#146b9e',\r\n    '#f376c1',\r\n    '#1b2839'\r\n  ],\r\n  chart: {\r\n    backgroundColor: '#061a44',\r\n    className: 'dark-container',\r\n    plotBackgroundColor: '#061a44',\r\n    plotBorderColor: '#CCCCCC',\r\n    plotBorderWidth: 0\r\n  },\r\n  title: {\r\n    style: {\r\n      color: '#C0C0C0',\r\n      font: 'bold 16px \"Trebuchet MS\", Verdana, sans-serif'\r\n    }\r\n  },\r\n  subtitle: {\r\n    style: {\r\n      color: '#666666',\r\n      font: 'bold 12px \"Trebuchet MS\", Verdana, sans-serif'\r\n    }\r\n  },\r\n  xAxis: {\r\n    gridLineColor: '#333333',\r\n    gridLineWidth: 0,\r\n    labels: {\r\n      style: {\r\n        color: '#A0A0A0'\r\n      }\r\n    },\r\n    lineColor: '#A0A0A0',\r\n    tickColor: '#A0A0A0',\r\n    title: {\r\n      style: {\r\n        color: '#CCC',\r\n        fontWeight: 'bold',\r\n        fontSize: '12px',\r\n        fontFamily: 'Trebuchet MS, Verdana, sans-serif'\r\n      }\r\n    }\r\n  },\r\n  yAxis: {\r\n    gridLineColor: '#333333',\r\n    labels: {\r\n      style: {\r\n        color: '#A0A0A0'\r\n      }\r\n    },\r\n    lineColor: '#A0A0A0',\r\n    minorTickInterval: null,\r\n    tickColor: '#A0A0A0',\r\n    tickWidth: 1,\r\n    title: {\r\n      style: {\r\n        color: '#CCC',\r\n        fontWeight: 'bold',\r\n        fontSize: '12px',\r\n        fontFamily: 'Trebuchet MS, Verdana, sans-serif'\r\n      }\r\n    }\r\n  },\r\n  tooltip: {\r\n    backgroundColor: 'rgba(0, 0, 0, 0.75)',\r\n    style: {\r\n      color: '#F0F0F0'\r\n    }\r\n  },\r\n  toolbar: {\r\n    itemStyle: {\r\n      color: 'silver'\r\n    }\r\n  },\r\n  plotOptions: {\r\n    line: {\r\n      dataLabels: {\r\n        color: '#CCC'\r\n      },\r\n      marker: {\r\n        lineColor: '#333'\r\n      }\r\n    },\r\n    spline: {\r\n      marker: {\r\n        lineColor: '#333'\r\n      }\r\n    },\r\n    scatter: {\r\n      marker: {\r\n        lineColor: '#333'\r\n      }\r\n    },\r\n    candlestick: {\r\n      lineColor: 'white'\r\n    }\r\n  },\r\n  legend: {\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    itemStyle: {\r\n      font: '9pt Trebuchet MS, Verdana, sans-serif',\r\n      color: '#A0A0A0'\r\n    },\r\n    itemHoverStyle: {\r\n      color: '#FFF'\r\n    },\r\n    itemHiddenStyle: {\r\n      color: '#444'\r\n    },\r\n    title: {\r\n      style: {\r\n        color: '#C0C0C0'\r\n      }\r\n    }\r\n  },\r\n  credits: {\r\n    enabled: false\r\n  },\r\n  labels: {\r\n    style: {\r\n      color: '#CCC'\r\n    }\r\n  },\r\n  navigation: {\r\n    buttonOptions: {\r\n      symbolStroke: '#DDDDDD',\r\n      theme: {\r\n        fill: {\r\n          linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\r\n          stops: [\r\n            [0.4, '#606060'],\r\n            [0.6, '#333333']\r\n          ]\r\n        },\r\n        stroke: '#000000'\r\n      }\r\n    }\r\n  },\r\n  // scroll charts\r\n  rangeSelector: {\r\n    buttonTheme: {\r\n      fill: {\r\n        linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\r\n        stops: [\r\n          [0.4, '#888'],\r\n          [0.6, '#555']\r\n        ]\r\n      },\r\n      stroke: '#000000',\r\n      style: {\r\n        color: '#CCC',\r\n        fontWeight: 'bold'\r\n      },\r\n      states: {\r\n        hover: {\r\n          fill: {\r\n            linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\r\n            stops: [\r\n              [0.4, '#BBB'],\r\n              [0.6, '#888']\r\n            ]\r\n          },\r\n          stroke: '#000000',\r\n          style: {\r\n            color: 'white'\r\n          }\r\n        },\r\n        select: {\r\n          fill: {\r\n            linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\r\n            stops: [\r\n              [0.1, '#000'],\r\n              [0.3, '#333']\r\n            ]\r\n          },\r\n          stroke: '#000000',\r\n          style: {\r\n            color: 'yellow'\r\n          }\r\n        }\r\n      }\r\n    },\r\n    inputStyle: {\r\n      backgroundColor: '#333',\r\n      color: 'silver'\r\n    },\r\n    labelStyle: {\r\n      color: 'silver'\r\n    }\r\n  },\r\n  navigator: {\r\n    handles: {\r\n      backgroundColor: '#666',\r\n      borderColor: '#AAA'\r\n    },\r\n    outlineColor: '#CCC',\r\n    maskFill: 'rgba(16, 16, 16, 0.5)',\r\n    series: {\r\n      color: '#7798BF',\r\n      lineColor: '#A6C7ED'\r\n    }\r\n  },\r\n  scrollbar: {\r\n    barBackgroundColor: {\r\n      linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\r\n      stops: [\r\n        [0.4, '#888'],\r\n        [0.6, '#555']\r\n      ]\r\n    },\r\n    barBorderColor: '#CCC',\r\n    buttonArrowColor: '#CCC',\r\n    buttonBackgroundColor: {\r\n      linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\r\n      stops: [\r\n        [0.4, '#888'],\r\n        [0.6, '#555']\r\n      ]\r\n    },\r\n    buttonBorderColor: '#CCC',\r\n    rifleColor: '#FFF',\r\n    trackBackgroundColor: {\r\n      linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\r\n      stops: [\r\n        [0, '#000'],\r\n        [1, '#333']\r\n      ]\r\n    },\r\n    trackBorderColor: '#666'\r\n  }\r\n}\r\n","export default function() {\r\n  return {\r\n    title: {\r\n      text: ''\r\n    },\r\n\r\n    yAxis: {\r\n      title: {\r\n        text: 'Price'\r\n      }\r\n    },\r\n    legend: {\r\n      layout: 'vertical',\r\n      align: 'right',\r\n      verticalAlign: 'middle'\r\n    },\r\n\r\n    plotOptions: {\r\n      series: {\r\n        label: {\r\n          connectorAllowed: false\r\n        },\r\n        pointStart: 2010\r\n      }\r\n    },\r\n\r\n    series: [\r\n      {\r\n        name: 'Installation',\r\n        data: [43934, 52503, 57177, 69658, 97031, 119931, 137133, 154175]\r\n      }\r\n    ],\r\n\r\n    responsive: {\r\n      rules: [\r\n        {\r\n          condition: {\r\n            maxWidth: 500\r\n          },\r\n          chartOptions: {\r\n            legend: {\r\n              layout: 'horizontal',\r\n              align: 'center',\r\n              verticalAlign: 'bottom'\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Page from '../Shared/Page'\r\nimport PriceGrid from './PriceGrid'\r\nimport CoinSpotlight from './CoinSpotlight'\r\nimport PriceCharts from './PriceChart'\r\nconst ChartGrid = styled.div`\r\n  display: grid;\r\n  margin-top: 20px;\r\n  grid-gap: 15px;\r\n  grid-template-columns: 1fr 3fr;\r\n`\r\n\r\nexport interface SettingsProps {}\r\n\r\nconst Settings: React.SFC<SettingsProps> = () => {\r\n  return (\r\n    <Page name='dashboard'>\r\n      <PriceGrid />\r\n      <ChartGrid>\r\n        <CoinSpotlight />\r\n        <PriceCharts />\r\n      </ChartGrid>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default Settings\r\n","import React from 'react'\r\nimport './App.css'\r\nimport Settings from '../Settings'\r\nimport AppLayout from './AppLayout'\r\nimport AppBar from './AppBar'\r\nimport { AppProvider } from './AppProvider'\r\nimport Content from '../Shared/Content'\r\nimport Dashboard from '../Dashboard'\r\n\r\n// import styled, { css } from 'styled-components'\r\n// interface ButtonProps {\r\n//   primary?: boolean\r\n// }\r\n\r\n// const Button = styled.div<ButtonProps>`\r\n//   color: green;\r\n//   ${props =>\r\n//     props.primary &&\r\n//     css`\r\n//       color: palevioletred;\r\n//     `}\r\n// `\r\n// const TomatoButton = styled.div<any>`\r\n//   color: tomato;\r\n//   border-color: tomato;\r\n// `\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <AppLayout>\r\n      <AppProvider>\r\n        <AppBar />\r\n        <Content>\r\n          <Settings />\r\n          <Dashboard />\r\n        </Content>\r\n      </AppProvider>\r\n    </AppLayout>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}